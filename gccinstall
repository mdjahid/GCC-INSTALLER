#!/bin/bash
BASEDIR=`dirname "$BASH_SOURCE"`
cd "$BASEDIR"
if [ $EUID -ne 0 ]; then
    echo -e "\n*********This script must be run with root privilege*********"
    echo -e "*******************Sorry! Exiting*************************\n"
    exit 2
fi
read -e -p "Enter GCC version number: " ver
archive=(gcc-$ver*.tar*)
echo "Found archive: $archive"
declare -a arr=("c++" "fortran" "go" "objc" "obj-c++")
lang="c"
echo -e "\n***Add Compilers of your choice, default is n (not select) for every step***\n"
for i in "${arr[@]}"
do
read -e -p "Add $i (y/n)?: " choice
if [ "$choice" == "y" ] || [ "$choice" == "Y" ]; then
lang="$lang,$i"
fi
echo "Selected Languages: $lang"
done
read -e -p "Number of simultaneous tasks?: " -i "5" sim
if [[ $sim =~ ^[\-0-9]+$ ]] && (( sim > 0)); then
  sim=$sim
else
  sim=5
fi
read -e -p "Install dependencies (requires network connection) (y/n)?: " -i "n" dep
if [ "$dep" == "y" ] || [ "$dep" == "Y" ]; then
apt-get install libmpfr-dev libgmp3-dev libmpc-dev libc6-dev flex bison gcc g++
fi
tmpdir="$(mktemp -d)"
tar xvjf $archive -C "$tmpdir"
cd $tmpdir/gcc* || exit 1
gccname=`basename "$PWD"`
cd ..
mkdir gcc-build
cd gcc-build
../$gccname/configure                        \
    --prefix=/usr                                    \
    --enable-shared                                  \
    --program-suffix=-$ver                           \
    --enable-linker-build-id                         \
    --enable-threads=posix                           \
    --libdir=/usr/lib                                \
    --enable-nls --with-sysroot=/                    \
    --enable-clocale=gnu                             \
    --enable-gnu-unique-object                       \
    --enable-plugin                                  \
    --enable-java-awt=gtk --enable-gtk-cairo         \
    --with-arch-directory=amd64                      \
    --with-ecj-jar=/usr/share/java/eclipse-ecj.jar   \
    --enable-objc-gc                                 \
    --enable-multiarch                               \
    --disable-werror                                 \
    --with-arch-32=i686                              \
    --with-abi=m64                                   \
    --with-multilib-list=m32,m64,mx32                \
    --with-tune=generic                              \
    --build=x86_64-linux-gnu                         \
    --host=x86_64-linux-gnu                          \
    --target=x86_64-linux-gnu                        \
    --enable-__cxa_atexit                            \
    --enable-clocale=gnu                             \
    --enable-multilib                               \
    --with-system-zlib                               \
    --enable-languages=$lang &&
make --jobs=$sim
make install
rm -rf "$tmpdir"
ln -sf /usr/bin/gcc-$ver /usr/bin/gcc
ln -sf /usr/bin/g++-$ver /usr/bin/g++
ln -sf /usr/bin/gcc /usr/bin/cc
ln -sf /usr/bin/g++ /usr/bin/cpp
ln -sf /usr/bin/g++ /usr/bin/c++

